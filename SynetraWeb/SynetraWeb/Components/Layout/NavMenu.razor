@implements IDisposable

@inject NavigationManager NavigationManager

<MudNavMenu Rounded="true" Margin="Margin.Normal" Color="Color.Primary" Class="pa-2">
    <MudNavLink Href="" Match="NavLinkMatch.All"  Icon="@Icons.Material.Filled.Home">Dashboard</MudNavLink>
    <AuthorizeView Roles="SuperAdmin">
        <MudNavLink Href="parcs" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Storage">Parc</MudNavLink>
    </AuthorizeView>
    <MudNavLink Href="rooms" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.MeetingRoom">Salles</MudNavLink>
    <MudNavLink Href="computers" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Computer">Ordinateurs</MudNavLink>
    <AuthorizeView Roles="SuperAdmin">
        <MudNavLink Href="users" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.People">Utilisateurs</MudNavLink>
    </AuthorizeView>
</MudNavMenu>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

